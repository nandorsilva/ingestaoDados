asyncapi: '2.6.0'
id: 'urn:io.logistica.estoque'
info:
  title: Lab Arquitetura de dados
  version: '1.0.0'
  description: |
    Curso de extensão de arquitetura de dados
    ### Confira a grade do curso:
    * Introdução à arquitetura de dados
    * Storage
    * Event-Driven Arquitetura    
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
servers:
  test:
    bindings:
      kafka:
        schemaRegistryUrl: 'https://my-schema-registry.com'
        schemaRegistryVendor: 'confluent'
        bindingVersion: '0.4.0'
    url: kafka-broker:9092
    protocol: kafka-secure
    description: Test broker
    security:
      - saslScram: []
defaultContentType: application/json
channels:
  logistica.estoque.alterado.v1:
    description: Estoque alterado.
    parameters:
      estoqueID:
        $ref: '#/components/parameters/estoqueID' 
    subscribe:
      summary: Informação de estoque alterado
      operationId: s-estoque-alterado    
      message:
        $ref: '#/components/messages/estoque'        
      bindings:
          kafka:
            topic: 'ogistica.estoque.alterado.v1'
            partitions: 1
            replicas: 1
            groupId:
              type: string
              enum: ['myGroupId']
            clientId:
              type: string
              enum: ['myClientId']
components:
  messages:
    estoque:
      name: estoque
      title: Estoque
      summary: Informações de mudanças de cada produto.
      contentType: application/json
      traits:
        - $ref: '#/components/messageTraits/commonHeaders'      
      payload:
        $ref: "#/components/schemas/estoquePayload"  
      examples:
        - name: "produto-1"
          summary: Exemplo produto 1             
          payload: 
            idEstoque: '{{randomInt())}}'
            idProduto: '{{randomInt(100)}}'
            quantidadeDisponivel: '{{randomInt(1, 10)}}'
            dtEstoque: "{{now(dd/MM/yyyy HH:mm:ss)}}"
  schemas:
    estoquePayload:
      type: object
      properties:
        idEstoque:
          type: integer
          minimum: 0
          description: Identificação estoque.
        idProduto:
          type: integer
          minimum: 0
          description: Produto.
        quantidadeDisponivel:
          type: integer
          minimum: 0
          description: Quantidade disponivel do produto.
        dtEstoque:
          $ref: "#/components/schemas/dtEstoque"  
  
    dtEstoque:
      type: string
      format: date-time
      description: Data estoque.
  securitySchemes:
    saslScram:
      type: scramSha256
      description: Provide your username and password for SASL/SCRAM authentication
  parameters:
    estoqueID:
      description: Identificação do estoque.
      schema:
        type: string
  messageTraits:
    commonHeaders:
      headers:
        type: object
        properties:
          my-app-header:
            type: integer
            minimum: 0
            maximum: 100
  
